import java.util.HashMap;public class TrieTree {	private class TrieNode{        public String s;        public boolean isString;        public HashMap<Character, TrieNode> childs;                TrieNode(){            s = "";            isString = false;            childs = new HashMap<Character, TrieNode>();        }    }		TrieNode root;        TrieTree(TrieNode root){        this.root = root;    }        public void insert(String s){        char[] chs = s.toCharArray();        TrieNode cur = this.root;        for(int i = 0; i < chs.length; i++){            if(!cur.childs.containsKey(chs[i])){                cur.childs.put(chs[i], new TrieNode());            }            cur = cur.childs.get(chs[i]);        }        cur.s = s;        cur.isString = true;    }        public boolean find(String s){        char[] chs = s.toCharArray();        TrieNode cur = root;        for(int i = 0; i < chs.length; i++){            if(!cur.childs.containsKey(chs[i])) return false;            cur = cur.childs.get(chs[i]);        }        return cur.isString;    }}