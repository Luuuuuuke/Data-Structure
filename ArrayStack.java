// Stack implemented by Arraypublic class ArrayStack<T> {	private int maxSize;	private int top;	private T[] array;		public ArrayStack(int size){		this.maxSize = size;		this.top = 0;		array = (T[])new Object[maxSize];	}		public void push(T ele){		if(top < maxSize)		{			array[top] = ele;			top++;		}		else{			throw new StackOverflowError();		}	}		public T pop(){		if(!this.empty()){			T temp = this.peek();			array[top-1] = null;			top--;			return temp;		}		return null;	}		public boolean empty(){		if(top == 0) return true;		return false;	}		public T peek(){		if(!this.empty()) return this.array[top-1];		return null;	}		public String toString(){		StringBuilder sb = new StringBuilder();		int i = 0;		while(!this.empty() && i < top){			sb.append(array[i].toString());			i++;		}		return sb.toString();	}}